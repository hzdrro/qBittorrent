name: GitHub Actions CI

# Cache is used for all Windows and macOS dependencies (size approx. 1230 * 2 + 1850 = 4310 MiB)
# Cache is not used for Ubuntu builds, because it already has all dependencies except
# the appropriate libtorrent version, which only takes 3-5 minutes to build from source anyway

on: [pull_request, push]

env:
  VCPKG_COMMIT: e4ce66eecfd3e5cca5eac06c971921bf8e37cf88
  VCPKG_DEST_MACOS: /Users/runner/qbt_tools/vcpkg
  VCPKG_DEST_WIN: C:\qbt_tools\vcpkg
  LIBTORRENT_VERSION_TAG: v1.2.13

jobs:

  ci_windows:
    name: Windows + vcpkg

    runs-on: windows-2019

    strategy:
      matrix:
        platform: [windows-latest]
        arch: [x64]
        build_type: [Release]
        qt_version: [6.0.3]
        include:
          - platform: windows-latest
            arch: x64
            qtarch: win64_msvc2019_64
      fail-fast: false

    defaults:
      run:
        shell: pwsh

    steps:
    - name: checkout repository
      uses: actions/checkout@v2

    # - ninja is needed for building qBittorrent (because it's preferrable, not a hard requirement)
    - name: install additional required packages with chocolatey
      run: |
        choco install ninja

    - name: setup vcpkg (cached, if possible)
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgDirectory: ${{ env.VCPKG_DEST_WIN }}
        vcpkgGitCommitId: ${{ env.VCPKG_COMMIT }}
        setupOnly: true

    # Tell vcpkg to only build Release variants of the dependencies
    - name: configure vcpkg triplet overlay for release builds only
      run: |
        New-Item -Path ${{ github.workspace }} -Name "triplets_overlay" -ItemType Directory
        Copy-Item ${{ env.RUNVCPKG_VCPKG_ROOT }}/triplets/x64-windows.cmake `
          ${{ github.workspace }}/triplets_overlay/x64-windows-release.cmake
        Add-Content ${{ github.workspace }}/triplets_overlay/x64-windows-release.cmake `
          -Value "set(VCPKG_BUILD_TYPE release)"

    # clear buildtrees after each package installation to reduce disk space requirements
    - name: install dependencies via vcpkg
      run: |
        $packages = `
          "boost-circular-buffer:x64-windows-release",
          "libtorrent:x64-windows-release",
          "zlib:x64-windows-release"
        ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe upgrade `
            --overlay-triplets=${{ github.workspace }}/triplets_overlay `
            --overlay-ports=${{ github.workspace }}/vcpkg `
            --no-dry-run
        foreach($package in $packages)
        {
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe install $package `
            --overlay-triplets=${{ github.workspace }}/triplets_overlay `
            --overlay-ports=${{ github.workspace }}/vcpkg `
            --clean-after-build
        }

    # NOTE: this is necessary to correctly find and use cl.exe with the Ninja generator for now
    - name: setup devcmd
      uses: ilammy/msvc-dev-cmd@v1

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.qt_version }}
    - name: Installing Qt - ${{ matrix.arch }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.qtarch }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
      # =========================================================================================================
    - name: build qBittorrent
      shell: cmd
      run: |
        cmake -B build -G "Ninja" ^
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_DEST_WIN }}\scripts\buildsystems\vcpkg.cmake ^
          -DVCPKG_TARGET_TRIPLET=x64-windows-release ^
          -DVERBOSE_CONFIGURE=ON ^
          -DMSVC_RUNTIME_DYNAMIC=ON ^
          -DSTACKTRACE=OFF ^
          --graphviz=build\target_graph.dot
        cmake --build build
    - name: Win - ${{ matrix.qt_version }} - Create 7z Release
      uses: DuckSoft/create-7z-action@v1.0
      with:
        pathSource: ./build/
        pathTarget: ./release.7z
    - name: Win - ${{ matrix.qt_version }} - Uploading Artifact
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@master
      with:
        name: qBittorrent-${{ github.sha }}.Windows-${{ matrix.ui_type }}.qt${{ matrix.qt_version }}-${{ matrix.build_type }}.7z
        path: release.7z
